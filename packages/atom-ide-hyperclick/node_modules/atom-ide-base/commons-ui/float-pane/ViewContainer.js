"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewContainer = exports.DATATIP_ACTIONS = void 0;
const MarkdownView_1 = require("./MarkdownView");
const SnippetView_1 = require("./SnippetView");
const ReactView_1 = require("./ReactView");
const React = __importStar(require("react"));
const react_dom_1 = __importDefault(require("react-dom"));
exports.DATATIP_ACTIONS = Object.freeze({
    PIN: "PIN",
    CLOSE: "CLOSE",
});
const IconsForAction = {
    [exports.DATATIP_ACTIONS.PIN]: "pin",
    [exports.DATATIP_ACTIONS.CLOSE]: "x",
};
class ViewContainer extends React.Component {
    constructor() {
        super(...arguments);
        this.children = [];
        this.rootElement = document.createElement("div");
    }
    render() {
        var _a;
        this.actionButton = this.ActionClick(this.props.action, this.props.actionTitle);
        this.updateChildren();
        return (React.createElement("div", Object.assign({ className: (_a = this.props.className) !== null && _a !== void 0 ? _a : "datatip-element" }, this.props.onMouseDown, this.props.onClickCapture),
            this.children,
            this.actionButton));
    }
    get element() {
        return react_dom_1.default.render(this.render(), this.rootElement);
    }
    updateChildren() {
        if (this.props.component) {
            this.children.push(React.createElement(ReactView_1.ReactView, Object.assign({}, this.props.component)));
        }
        if (this.props.snippet) {
            this.children.push(React.createElement(SnippetView_1.SnippetView, Object.assign({}, this.props.snippet)));
        }
        if (this.props.markdown) {
            this.children.push(React.createElement(MarkdownView_1.MarkdownView, Object.assign({}, this.props.markdown)));
        }
    }
    ActionClick(action, actionTitle) {
        let actionButton = undefined;
        if (action != null && IconsForAction[action] != null) {
            const actionIcon = IconsForAction[action];
            actionButton = (React.createElement("div", { className: `datatip-pin-button icon-${actionIcon}`, onClick: (event) => {
                    this.props.onActionClick();
                }, title: actionTitle }));
        }
        return actionButton;
    }
    async destroy() {
        return;
    }
}
exports.ViewContainer = ViewContainer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlld0NvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy1jb21tb25zLXVpL2Zsb2F0LXBhbmUvVmlld0NvbnRhaW5lci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlEQUF5RTtBQUN6RSwrQ0FBc0U7QUFDdEUsMkNBQWdFO0FBRWhFLDZDQUE4QjtBQUM5QiwwREFBZ0M7QUFFbkIsUUFBQSxlQUFlLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUMzQyxHQUFHLEVBQUUsS0FBSztJQUNWLEtBQUssRUFBRSxPQUFPO0NBQ2YsQ0FBQyxDQUFBO0FBRUYsTUFBTSxjQUFjLEdBQUc7SUFDckIsQ0FBQyx1QkFBZSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUs7SUFDNUIsQ0FBQyx1QkFBZSxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUc7Q0FDN0IsQ0FBQTtBQW1CRCxNQUFhLGFBQWMsU0FBUSxLQUFLLENBQUMsU0FBdUI7SUFBaEU7O1FBRUUsYUFBUSxHQUF1QixFQUFFLENBQUE7UUFDakMsZ0JBQVcsR0FBZ0IsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQTZEMUQsQ0FBQztJQXZEQyxNQUFNOztRQUNKLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQy9FLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTtRQUNyQixPQUFPLENBQ0wsMkNBQ0UsU0FBUyxRQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxtQ0FBSSxpQkFBaUIsSUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQ3RCLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYztZQUU1QixJQUFJLENBQUMsUUFBUTtZQUNiLElBQUksQ0FBQyxZQUFZLENBQ2QsQ0FDUCxDQUFBO0lBQ0gsQ0FBQztJQUVELElBQUksT0FBTztRQUNULE9BQU8sbUJBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUN6RCxDQUFDO0lBTUQsY0FBYztRQUNaLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUU7WUFDeEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsb0JBQUMscUJBQVMsb0JBQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUksQ0FBQyxDQUFBO1NBQzVEO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxvQkFBQyx5QkFBVyxvQkFBSyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBSSxDQUFDLENBQUE7U0FDNUQ7UUFDRCxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLG9CQUFDLDJCQUFZLG9CQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFJLENBQUMsQ0FBQTtTQUM5RDtJQUNILENBQUM7SUFFRCxXQUFXLENBQUMsTUFBYyxFQUFFLFdBQW1CO1FBQzdDLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQTtRQUM1QixJQUFJLE1BQU0sSUFBSSxJQUFJLElBQUksY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksRUFBRTtZQUNwRCxNQUFNLFVBQVUsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDekMsWUFBWSxHQUFHLENBQ2IsNkJBQ0UsU0FBUyxFQUFFLDJCQUEyQixVQUFVLEVBQUUsRUFDbEQsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7b0JBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLENBQUE7Z0JBQzVCLENBQUMsRUFDRCxLQUFLLEVBQUUsV0FBVyxHQUNsQixDQUNILENBQUE7U0FDRjtRQUNELE9BQU8sWUFBWSxDQUFBO0lBQ3JCLENBQUM7SUFFRCxLQUFLLENBQUMsT0FBTztRQUNYLE9BQU07SUFDUixDQUFDO0NBQ0Y7QUFoRUQsc0NBZ0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFya2Rvd25WaWV3LCBQcm9wcyBhcyBNYXJrZG93blZpZXdQcm9wcyB9IGZyb20gXCIuL01hcmtkb3duVmlld1wiXHJcbmltcG9ydCB7IFNuaXBwZXRWaWV3LCBQcm9wcyBhcyBTbmlwcGV0Vmlld1Byb3BzIH0gZnJvbSBcIi4vU25pcHBldFZpZXdcIlxyXG5pbXBvcnQgeyBSZWFjdFZpZXcsIFByb3BzIGFzIFJlYWN0Vmlld1Byb3BzIH0gZnJvbSBcIi4vUmVhY3RWaWV3XCJcclxuaW1wb3J0IHR5cGUgeyBSZWFjdEVsZW1lbnQgfSBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiXHJcblxyXG5leHBvcnQgY29uc3QgREFUQVRJUF9BQ1RJT05TID0gT2JqZWN0LmZyZWV6ZSh7XHJcbiAgUElOOiBcIlBJTlwiLFxyXG4gIENMT1NFOiBcIkNMT1NFXCIsXHJcbn0pXHJcblxyXG5jb25zdCBJY29uc0ZvckFjdGlvbiA9IHtcclxuICBbREFUQVRJUF9BQ1RJT05TLlBJTl06IFwicGluXCIsXHJcbiAgW0RBVEFUSVBfQUNUSU9OUy5DTE9TRV06IFwieFwiLFxyXG59XHJcblxyXG5pbnRlcmZhY2UgUHJvcHMge1xyXG4gIGNvbXBvbmVudD86IFJlYWN0Vmlld1Byb3BzXHJcbiAgbWFya2Rvd24/OiBNYXJrZG93blZpZXdQcm9wc1xyXG4gIHNuaXBwZXQ/OiBTbmlwcGV0Vmlld1Byb3BzXHJcbiAgYWN0aW9uPzogc3RyaW5nXHJcbiAgYWN0aW9uVGl0bGU/OiBzdHJpbmdcclxuICBjbGFzc05hbWU/OiBzdHJpbmdcclxuICBvbkFjdGlvbkNsaWNrPzogRnVuY3Rpb25cclxuICBvbk1vdXNlRG93bj86IEZ1bmN0aW9uXHJcbiAgb25DbGlja0NhcHR1cmU/OiBGdW5jdGlvblxyXG59XHJcblxyXG5pbnRlcmZhY2UgU3RhdGUge31cclxuXHJcbi8qKlxyXG4gKiBhbiBldGNoIGNvbXBvbmVudCBmb3IgYSBkZWNvcmF0aW9uIHBhbmVcclxuICovXHJcbmV4cG9ydCBjbGFzcyBWaWV3Q29udGFpbmVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xyXG4gIGFjdGlvbkJ1dHRvbj86IEpTWC5FbGVtZW50XHJcbiAgY2hpbGRyZW46IEFycmF5PEpTWC5FbGVtZW50PiA9IFtdXHJcbiAgcm9vdEVsZW1lbnQ6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxyXG5cclxuICAvKipcclxuICAgKiByZW5kZXJzIHRoZSBkYXRhIHRpcCB2aWV3IGNvbXBvbmVudFxyXG4gICAqIEByZXR1cm4gdGhlIGRhdGEgdGlwIHZpZXcgZWxlbWVudFxyXG4gICAqL1xyXG4gIHJlbmRlcigpOiBSZWFjdEVsZW1lbnQge1xyXG4gICAgdGhpcy5hY3Rpb25CdXR0b24gPSB0aGlzLkFjdGlvbkNsaWNrKHRoaXMucHJvcHMuYWN0aW9uLCB0aGlzLnByb3BzLmFjdGlvblRpdGxlKVxyXG4gICAgdGhpcy51cGRhdGVDaGlsZHJlbigpXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2XHJcbiAgICAgICAgY2xhc3NOYW1lPXt0aGlzLnByb3BzLmNsYXNzTmFtZSA/PyBcImRhdGF0aXAtZWxlbWVudFwifVxyXG4gICAgICAgIHsuLi50aGlzLnByb3BzLm9uTW91c2VEb3dufVxyXG4gICAgICAgIHsuLi50aGlzLnByb3BzLm9uQ2xpY2tDYXB0dXJlfVxyXG4gICAgICA+XHJcbiAgICAgICAge3RoaXMuY2hpbGRyZW59XHJcbiAgICAgICAge3RoaXMuYWN0aW9uQnV0dG9ufVxyXG4gICAgICA8L2Rpdj5cclxuICAgIClcclxuICB9XHJcblxyXG4gIGdldCBlbGVtZW50KCkge1xyXG4gICAgcmV0dXJuIFJlYWN0RE9NLnJlbmRlcih0aGlzLnJlbmRlcigpLCB0aGlzLnJvb3RFbGVtZW50KVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogaW50ZXJuYWwgaGVscGVyIGZ1bmN0aW9uIHRvIGZpZ3VyZSBvdXQgdGhlIHN0cnVjdHVyZSBvZiB0aGUgZGF0YSB0aXAgdmlld1xyXG4gICAqIHRvIGJlIHJlbmRlcmVkXHJcbiAgICovXHJcbiAgdXBkYXRlQ2hpbGRyZW4oKSB7XHJcbiAgICBpZiAodGhpcy5wcm9wcy5jb21wb25lbnQpIHtcclxuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKDxSZWFjdFZpZXcgey4uLnRoaXMucHJvcHMuY29tcG9uZW50fSAvPilcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnByb3BzLnNuaXBwZXQpIHtcclxuICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKDxTbmlwcGV0VmlldyB7Li4udGhpcy5wcm9wcy5zbmlwcGV0fSAvPilcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnByb3BzLm1hcmtkb3duKSB7XHJcbiAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaCg8TWFya2Rvd25WaWV3IHsuLi50aGlzLnByb3BzLm1hcmtkb3dufSAvPilcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEFjdGlvbkNsaWNrKGFjdGlvbjogc3RyaW5nLCBhY3Rpb25UaXRsZTogc3RyaW5nKSB7XHJcbiAgICBsZXQgYWN0aW9uQnV0dG9uID0gdW5kZWZpbmVkXHJcbiAgICBpZiAoYWN0aW9uICE9IG51bGwgJiYgSWNvbnNGb3JBY3Rpb25bYWN0aW9uXSAhPSBudWxsKSB7XHJcbiAgICAgIGNvbnN0IGFjdGlvbkljb24gPSBJY29uc0ZvckFjdGlvblthY3Rpb25dXHJcbiAgICAgIGFjdGlvbkJ1dHRvbiA9IChcclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjbGFzc05hbWU9e2BkYXRhdGlwLXBpbi1idXR0b24gaWNvbi0ke2FjdGlvbkljb259YH1cclxuICAgICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uQWN0aW9uQ2xpY2soKVxyXG4gICAgICAgICAgfX1cclxuICAgICAgICAgIHRpdGxlPXthY3Rpb25UaXRsZX1cclxuICAgICAgICAvPlxyXG4gICAgICApXHJcbiAgICB9XHJcbiAgICByZXR1cm4gYWN0aW9uQnV0dG9uXHJcbiAgfVxyXG5cclxuICBhc3luYyBkZXN0cm95KCkge1xyXG4gICAgcmV0dXJuIC8vIHRoaXMuY29tcG9uZW50V2lsbFVubW91bnQoKVxyXG4gIH1cclxufVxyXG4iXX0=