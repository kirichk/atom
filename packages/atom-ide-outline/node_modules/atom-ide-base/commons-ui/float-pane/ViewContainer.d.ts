import { Props as MarkdownViewProps } from "./MarkdownView";
import { Props as SnippetViewProps } from "./SnippetView";
import { Props as ReactViewProps } from "./ReactView";
import type { ReactElement } from "react";
import * as React from "react";
export declare const DATATIP_ACTIONS: Readonly<{
    PIN: string;
    CLOSE: string;
}>;
interface Props {
    component?: ReactViewProps;
    markdown?: MarkdownViewProps;
    snippet?: SnippetViewProps;
    action?: string;
    actionTitle?: string;
    className?: string;
    onActionClick?: Function;
    onMouseDown?: Function;
    onClickCapture?: Function;
}
interface State {
}
export declare class ViewContainer extends React.Component<Props, State> {
    actionButton?: JSX.Element;
    children: Array<JSX.Element>;
    rootElement: HTMLElement;
    render(): ReactElement;
    get element(): void | Element | React.Component<any, any, any>;
    updateChildren(): void;
    ActionClick(action: string, actionTitle: string): JSX.Element | undefined;
    destroy(): Promise<void>;
}
export {};
